import type { ProjectPortAllocation } from './ports.js'

export interface SupabaseConfigOptions {
  projectId: string
  projectName: string
  ports: ProjectPortAllocation
  siteUrl: string
}

const escapeTomlString = (value: string) => value.replace(/"/g, '\\"')

export const renderSupabaseConfig = ({ projectId, ports, siteUrl }: SupabaseConfigOptions) => {
  const sanitizedSiteUrl = siteUrl.endsWith('/') ? siteUrl.slice(0, -1) : siteUrl
  const shadowPort = ports.db + 50
  const poolerPort = ports.db + 60

  return `# Generated by platform-api provisioning. Edits will be overwritten.
project_id = "${escapeTomlString(projectId)}"

[api]
enabled = true
port = ${ports.api}
schemas = ["public", "graphql_public", "storage", "content"]
extra_search_path = ["public", "extensions"]
max_rows = 1000

[db]
port = ${ports.db}
shadow_port = ${shadowPort}
major_version = 15

[db.pooler]
enabled = true
port = ${poolerPort}
pool_mode = "transaction"
default_pool_size = 20
max_client_conn = 100

[db.migrations]
enabled = true
schema_paths = []

[db.seed]
enabled = true
sql_paths = ["./seed.sql"]

[realtime]
enabled = true

[studio]
enabled = true
port = ${ports.studio}
api_url = "${escapeTomlString(siteUrl)}"

[inbucket]
enabled = true
port = ${ports.inbucket}

[storage]
enabled = true
file_size_limit = "50MiB"

[auth]
enabled = true
site_url = "${escapeTomlString(sanitizedSiteUrl)}"
additional_redirect_urls = [
    "${escapeTomlString(sanitizedSiteUrl)}/*/*",
    "http://127.0.0.1:3000/*/*",
]
jwt_expiry = 3600
enable_signup = true
enable_anonymous_sign_ins = false
enable_refresh_token_rotation = true
refresh_token_reuse_interval = 10

[auth.email]
enable_signup = true
double_confirm_changes = true
enable_confirmations = false

[functions]

[storage.buckets.fonts]
public = true
objects_path = "buckets/fonts"
`
}
