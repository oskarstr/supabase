import { constants } from '@supabase/shared-types'

const { PermissionAction } = constants

type PermissionActionValue = (typeof PermissionAction)[keyof typeof PermissionAction]
export type PermissionRoleKey = 'owner' | 'admin' | 'developer' | 'read_only'
export type PermissionScope = 'organization' | 'project'

export interface PermissionMatrixEntry {
  scope: PermissionScope
  resource: string
  action: PermissionActionValue
  roles: PermissionRoleKey[]
}

export const PERMISSION_MATRIX: PermissionMatrixEntry[] = [
  { scope: 'organization', resource: 'approved_oauth_apps', action: PermissionAction.CREATE, roles: ['owner', 'admin'] },
  { scope: 'organization', resource: 'approved_oauth_apps', action: PermissionAction.DELETE, roles: ['owner', 'admin'] },
  { scope: 'organization', resource: 'approved_oauth_apps', action: PermissionAction.READ, roles: ['owner', 'admin'] },
  { scope: 'organization', resource: 'approved_oauth_apps', action: PermissionAction.UPDATE, roles: ['owner', 'admin'] },
  { scope: 'organization', resource: 'integrations.github_connections', action: PermissionAction.CREATE, roles: ['owner', 'admin'] },
  { scope: 'organization', resource: 'integrations.github_connections', action: PermissionAction.DELETE, roles: ['owner', 'admin'] },
  { scope: 'organization', resource: 'integrations.github_connections', action: PermissionAction.READ, roles: ['owner', 'admin'] },
  { scope: 'organization', resource: 'integrations.github_connections', action: PermissionAction.UPDATE, roles: ['owner', 'admin'] },
  { scope: 'organization', resource: 'integrations.vercel_connections', action: PermissionAction.CREATE, roles: ['owner', 'admin'] },
  { scope: 'organization', resource: 'integrations.vercel_connections', action: PermissionAction.DELETE, roles: ['owner', 'admin'] },
  { scope: 'organization', resource: 'integrations.vercel_connections', action: PermissionAction.READ, roles: ['owner', 'admin'] },
  { scope: 'organization', resource: 'integrations.vercel_connections', action: PermissionAction.UPDATE, roles: ['owner', 'admin'] },
  { scope: 'organization', resource: 'notifications', action: PermissionAction.READ, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'organization', resource: 'oauth_apps', action: PermissionAction.UPDATE, roles: ['owner', 'admin'] },
  { scope: 'organization', resource: 'organization_members', action: PermissionAction.CREATE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'organization', resource: 'organization_members', action: PermissionAction.DELETE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'organization', resource: 'organization_members', action: PermissionAction.READ, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'organization', resource: 'organization_members.owner', action: PermissionAction.CREATE, roles: ['owner'] },
  { scope: 'organization', resource: 'organization_members.owner', action: PermissionAction.DELETE, roles: ['owner'] },
  { scope: 'organization', resource: 'organization_members.admin', action: PermissionAction.CREATE, roles: ['owner', 'admin'] },
  { scope: 'organization', resource: 'organization_members.admin', action: PermissionAction.DELETE, roles: ['owner', 'admin'] },
  { scope: 'organization', resource: 'organization_members.developer', action: PermissionAction.CREATE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'organization', resource: 'organization_members.developer', action: PermissionAction.DELETE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'organization', resource: 'organizations', action: PermissionAction.READ, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'organization', resource: 'organizations', action: PermissionAction.UPDATE, roles: ['owner'] },
  { scope: 'organization', resource: 'organizations', action: PermissionAction.DELETE, roles: ['owner'] },
  { scope: 'organization', resource: 'openai_telemetry', action: PermissionAction.READ, roles: ['owner', 'admin'] },
  { scope: 'organization', resource: 'openai_telemetry', action: PermissionAction.UPDATE, roles: ['owner', 'admin'] },
  { scope: 'organization', resource: 'audit_logs', action: PermissionAction.READ, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'organization', resource: 'legal_documents', action: PermissionAction.READ, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'organization', resource: 'projects', action: PermissionAction.CREATE, roles: ['owner', 'admin'] },
  { scope: 'organization', resource: 'stripe.customer', action: PermissionAction.BILLING_READ, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'organization', resource: 'stripe.customer', action: PermissionAction.BILLING_WRITE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'organization', resource: 'stripe.payment_methods', action: PermissionAction.BILLING_READ, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'organization', resource: 'stripe.payment_methods', action: PermissionAction.BILLING_WRITE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'organization', resource: 'stripe.subscriptions', action: PermissionAction.BILLING_READ, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'organization', resource: 'stripe.subscriptions', action: PermissionAction.BILLING_WRITE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'organization', resource: 'stripe.tax_ids', action: PermissionAction.BILLING_READ, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'organization', resource: 'stripe.tax_ids', action: PermissionAction.BILLING_WRITE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'organization', resource: 'user_invites', action: PermissionAction.CREATE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'organization', resource: 'user_invites', action: PermissionAction.DELETE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: '%', action: PermissionAction.AUTH_EXECUTE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: '%', action: PermissionAction.FUNCTIONS_READ, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'project', resource: '%', action: PermissionAction.FUNCTIONS_WRITE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: '%', action: PermissionAction.REALTIME_ADMIN_READ, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: '%', action: PermissionAction.SECRETS_READ, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'project', resource: '%', action: PermissionAction.SECRETS_WRITE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: '%', action: PermissionAction.STORAGE_ADMIN_READ, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: '%', action: PermissionAction.STORAGE_ADMIN_WRITE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: '%', action: PermissionAction.STORAGE_WRITE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: '%', action: PermissionAction.TENANT_SQL_ADMIN_WRITE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: '%', action: PermissionAction.TENANT_SQL_QUERY, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'project', resource: 'api_keys', action: PermissionAction.READ, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: 'auth.mfa_factors', action: PermissionAction.TENANT_SQL_DELETE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: 'auth.users', action: PermissionAction.TENANT_SQL_DELETE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: 'auth_signing_keys', action: PermissionAction.READ, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: 'back_ups', action: PermissionAction.READ, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'project', resource: 'create_user', action: PermissionAction.AUTH_EXECUTE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: 'custom_config_gotrue', action: PermissionAction.READ, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: 'custom_config_gotrue', action: PermissionAction.UPDATE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: 'custom_config_postgrest', action: PermissionAction.READ, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: 'custom_config_postgrest', action: PermissionAction.UPDATE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: 'extensions', action: PermissionAction.TENANT_SQL_ADMIN_READ, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'project', resource: 'field.jwt_secret', action: PermissionAction.READ, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: 'functions', action: PermissionAction.TENANT_SQL_ADMIN_READ, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'project', resource: 'invite_user', action: PermissionAction.AUTH_EXECUTE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: 'logflare', action: PermissionAction.ANALYTICS_ADMIN_WRITE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: 'logflare', action: PermissionAction.ANALYTICS_READ, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'project', resource: 'physical_backups', action: PermissionAction.READ, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'project', resource: 'policies', action: PermissionAction.TENANT_SQL_ADMIN_READ, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'project', resource: 'preview_branches', action: PermissionAction.CREATE, roles: ['owner', 'admin'] },
  { scope: 'project', resource: 'preview_branches', action: PermissionAction.DELETE, roles: ['owner', 'admin'] },
  { scope: 'project', resource: 'preview_branches', action: PermissionAction.READ, roles: ['owner', 'admin'] },
  { scope: 'project', resource: 'preview_branches', action: PermissionAction.UPDATE, roles: ['owner', 'admin'] },
  { scope: 'project', resource: 'projects', action: PermissionAction.DELETE, roles: ['owner', 'admin'] },
  { scope: 'project', resource: 'projects', action: PermissionAction.READ, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'project', resource: 'projects', action: PermissionAction.UPDATE, roles: ['owner', 'admin'] },
  { scope: 'project', resource: 'publications', action: PermissionAction.TENANT_SQL_ADMIN_READ, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'project', resource: 'queue_job.projects.update_jwt', action: PermissionAction.INFRA_EXECUTE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: 'queue_job.restore.prepare', action: PermissionAction.INFRA_EXECUTE, roles: ['owner', 'admin'] },
  { scope: 'project', resource: 'queue_job.walg.prepare_restore', action: PermissionAction.INFRA_EXECUTE, roles: ['owner', 'admin'] },
  { scope: 'project', resource: 'queue_jobs.projects.initialize_or_resume', action: PermissionAction.INFRA_EXECUTE, roles: ['owner', 'admin'] },
  { scope: 'project', resource: 'queue_jobs.projects.pause', action: PermissionAction.INFRA_EXECUTE, roles: ['owner', 'admin'] },
  { scope: 'project', resource: 'reboot', action: PermissionAction.INFRA_EXECUTE, roles: ['owner', 'admin'] },
  { scope: 'project', resource: 'send_magic_link', action: PermissionAction.AUTH_EXECUTE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: 'send_otp', action: PermissionAction.AUTH_EXECUTE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: 'send_recovery', action: PermissionAction.AUTH_EXECUTE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: 'service_api_keys', action: PermissionAction.READ, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: 'tables', action: PermissionAction.TENANT_SQL_ADMIN_READ, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'project', resource: 'triggers', action: PermissionAction.TENANT_SQL_ADMIN_READ, roles: ['owner', 'admin', 'developer', 'read_only'] },
  { scope: 'project', resource: 'user_content', action: PermissionAction.CREATE, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: 'user_content', action: PermissionAction.READ, roles: ['owner', 'admin', 'developer'] },
  { scope: 'project', resource: 'user_content', action: PermissionAction.UPDATE, roles: ['owner', 'admin', 'developer'] },
]
